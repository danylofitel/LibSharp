<Project Sdk="Microsoft.NET.Sdk">

  <PropertyGroup>
    <TargetFrameworks>netstandard2.0;netstandard2.1;net5.0;net6.0;net7.0;net8.0</TargetFrameworks>
    <IsPackable>true</IsPackable>
    <LangVersion>latest</LangVersion>
    <AssemblyName>LibSharp</AssemblyName>
    <RootNamespace>LibSharp</RootNamespace>
    <DocumentationFile>bin\$(Configuration)\$(TargetFramework)\$(AssemblyName).xml</DocumentationFile>
    <TreatWarningsAsErrors>true</TreatWarningsAsErrors>
    <WarningsAsErrors />
    <PackageId>LibSharp</PackageId>
    <Version>1.1.1</Version>
    <Authors>Danylo Fitel</Authors>
    <Copyright>Copyright (c) Danylo Fitel 2024</Copyright>
    <Description>
Contains:
- Async lazy (both for LazyThreadSafetyMode.PublicationOnly and LazyThreadSafetyMode.ExecutionAndPublication modes).
- Async in-memory value cache.
- Async in-memory key-value cache.
- Min and max priority queues.
- Extension methods for collection interfaces.
- Extension methods for common classes, e.g. string and DateTime.
- Argument validation methods.
    </Description>
    <PackageReleaseNotes>
- 1.1.1: Changed return type of IEnumerable.Shuffle extension method to return an array instead of IEnumerable to not force the callers to create extra copies.
- 1.1.0: Added support for .NET Standard 2.0, .NET Standard 2.1, .NET 5.0, .NET 6.0, .NET 7.0. Updated documentation and added examples.
- 1.0.0: Initial release. Supports .NET 8.0 only.
    </PackageReleaseNotes>
    <PackageTags>LibSharp;Async;Lazy;Cache;Caching;Collections;Extensions</PackageTags>
    <PackageReadmeFile>README.md</PackageReadmeFile>
    <PackageLicenseFile>LICENSE.txt</PackageLicenseFile>
    <PackageProjectUrl>https://www.nuget.org/packages/LibSharp</PackageProjectUrl>
    <RepositoryType>git</RepositoryType>
    <RepositoryUrl>https://github.com/danylofitel/LibSharp</RepositoryUrl>
  </PropertyGroup>

  <ItemGroup>
    <None Include="..\..\README.md" Pack="true" PackagePath="" />
    <None Include="..\..\LICENSE.txt" Pack="true" PackagePath="" />
  </ItemGroup>

</Project>
